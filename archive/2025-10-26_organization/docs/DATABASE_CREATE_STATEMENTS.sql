*************************** 1. row ***************************
       Table: faulty_products
Create Table: CREATE TABLE `faulty_products` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Unique identifier for each faulty product record in the system.',
  `product_id` varchar(45) NOT NULL COMMENT 'Unique identifier for the faulty product being reported.',
  `serial_number` varchar(100) DEFAULT NULL COMMENT 'Unique identifier for tracking each faulty product in the system.',
  `fault_desc` mediumtext NOT NULL COMMENT 'Description of the product''s fault as reported by staff for troubleshooting and record-keeping.',
  `staff_member` varchar(45) NOT NULL COMMENT 'Name of the employee who logged or handled the faulty product entry.',
  `store_location` varchar(100) NOT NULL COMMENT 'Identifies the specific store where the faulty product is located for processing or reporting.',
  `time_created` timestamp NOT NULL DEFAULT current_timestamp(),
  `status` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates whether the faulty product has been processed for resolution.',
  `supplier_status` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates the current resolution status of the product issue with the supplier.',
  `supplier_update_status` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if the supplier has been updated about the faulty product''s status.',
  `supplier_status_timestamp` timestamp NULL DEFAULT NULL COMMENT 'Timestamp of the last update from the supplier regarding the faulty product''s status.',
  `wholesale_customer_submitted_id` int(11) NOT NULL DEFAULT 0 COMMENT 'Identifies the wholesale customer who reported the faulty product.',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3536 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of products identified as faulty, used by the business to track and manage defective items for quality control and customer service purposes.  \nTags: faulty product reports, defect tracking, quality control, customer complaints, product returns, warranty claims, store location issues, staff handling, product recalls.'
*************************** 1. row ***************************
       Table: purchase_order_line_items
Create Table: CREATE TABLE `purchase_order_line_items` (
  `product_id` varchar(100) NOT NULL COMMENT 'Unique identifier for each product in a purchase order line item.',
  `substitution_product_id` varchar(100) DEFAULT NULL,
  `purchase_order_id` int(11) NOT NULL COMMENT 'Links each line item to its corresponding purchase order for tracking and reference.',
  `order_qty` int(11) NOT NULL COMMENT 'The number of units ordered for a specific product in a purchase order.',
  `slip_qty` int(11) DEFAULT NULL,
  `order_purchase_price` decimal(10,4) NOT NULL,
  `qty_in_stock_before` int(11) DEFAULT NULL COMMENT 'The stock level of a product before receiving the current purchase order.',
  `qty_arrived` int(11) DEFAULT NULL COMMENT 'The number of items received from a supplier for a specific purchase order.',
  `damaged_qty` int(11) NOT NULL DEFAULT 0,
  `discrepancy_type` enum('OK','MISSING','SENT_LOW','SENT_HIGH','SUBSTITUTED','DAMAGED','UNORDERED') NOT NULL DEFAULT 'OK',
  `unit_cost_ex_gst` decimal(10,4) DEFAULT NULL,
  `line_note` varchar(255) DEFAULT NULL,
  `received_by` varchar(45) DEFAULT NULL COMMENT 'Staff member who received this line item',
  `received_at` timestamp NULL DEFAULT NULL COMMENT 'When this line item was processed',
  `barcode_scanned` tinyint(1) NOT NULL DEFAULT 0 COMMENT 'Whether barcode was scanned during receiving',
  `photo_evidence_count` int(11) NOT NULL DEFAULT 0 COMMENT 'Number of photos attached to this line item',
  `receiving_notes` mediumtext DEFAULT NULL COMMENT 'Additional notes during receiving process',
  `added_product` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if the product was newly added to inventory with this order.',
  `unexpected_product` tinyint(1) NOT NULL DEFAULT 0,
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp() COMMENT 'Last time this PO line item was updated',
  `deleted_by` int(11) DEFAULT NULL COMMENT 'User ID of staff who soft-deleted this PO line item',
  `deleted_at` timestamp NULL DEFAULT NULL COMMENT 'When the PO line item was soft deleted',
  `qty_ordered` int(11) GENERATED ALWAYS AS (`order_qty`) VIRTUAL,
  `qty_received` int(11) GENERATED ALWAYS AS (`qty_arrived`) VIRTUAL,
  `has_damage` tinyint(1) DEFAULT NULL,
  `is_substitute` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`product_id`,`purchase_order_id`),
  KEY `purchaseOrderID_idx` (`purchase_order_id`),
  KEY `ix_poli_product` (`product_id`),
  KEY `idx_poli_unexpected` (`unexpected_product`),
  KEY `ix_poli_substitute` (`substitution_product_id`),
  KEY `idx_poli_received` (`received_by`,`received_at`),
  KEY `idx_poli_barcode` (`barcode_scanned`),
  KEY `idx_poli_photos` (`photo_evidence_count`),
  CONSTRAINT `purchaseOrderID` FOREIGN KEY (`purchase_order_id`) REFERENCES `purchase_orders` (`purchase_order_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains detailed records of each product line item included in purchase orders, used by the business to track inventory levels and manage supplier orders efficiently.  \nTags: purchase order details, inventory tracking, supplier management, order fulfillment, stock level updates, product arrival status, purchase order analysis'
*************************** 1. row ***************************
       Table: supplier_activity_log
Create Table: CREATE TABLE `supplier_activity_log` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `supplier_id` varchar(100) NOT NULL,
  `order_id` int(11) DEFAULT NULL,
  `action_type` enum('login','logout','tracking_updated','note_added','info_requested','order_viewed','report_generated','csv_exported') NOT NULL,
  `action_details` text DEFAULT NULL,
  `ip_address` varchar(45) DEFAULT NULL,
  `user_agent` varchar(255) DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `idx_supplier_id` (`supplier_id`),
  KEY `idx_order_id` (`order_id`),
  KEY `idx_action_type` (`action_type`),
  KEY `idx_created_at` (`created_at`),
  CONSTRAINT `supplier_activity_log_ibfk_1` FOREIGN KEY (`order_id`) REFERENCES `vend_consignments` (`id`) ON DELETE SET NULL
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
*************************** 1. row ***************************
       Table: supplier_portal_sessions
Create Table: CREATE TABLE `supplier_portal_sessions` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Unique session identifier',
  `supplier_id` varchar(100) NOT NULL COMMENT 'Links to vend_suppliers.id (business code format)',
  `session_token` varchar(64) NOT NULL COMMENT 'Secure session token for authentication',
  `ip_address` varchar(45) DEFAULT NULL COMMENT 'IP address of the session for security tracking',
  `user_agent` varchar(255) DEFAULT NULL COMMENT 'Browser user agent for device identification',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'When session was created',
  `expires_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'When session expires (typically 24 hours)',
  `last_activity` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp() COMMENT 'Last activity timestamp for idle detection',
  PRIMARY KEY (`id`),
  UNIQUE KEY `session_token` (`session_token`),
  KEY `idx_session_token` (`session_token`) COMMENT 'Fast token lookup',
  KEY `idx_supplier_active` (`supplier_id`,`expires_at`) COMMENT 'Find active sessions by supplier',
  KEY `idx_expires` (`expires_at`) COMMENT 'Cleanup expired sessions',
  CONSTRAINT `supplier_portal_sessions_ibfk_1` FOREIGN KEY (`supplier_id`) REFERENCES `vend_suppliers` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Supplier portal authentication sessions with auto-expiry'
*************************** 1. row ***************************
       Table: vend_consignments
Create Table: CREATE TABLE `vend_consignments` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'CIS transfer ID (primary)',
  `public_id` varchar(40) NOT NULL,
  `vend_transfer_id` char(36) DEFAULT NULL COMMENT 'Vend/Lightspeed consignment UUID (unique when present)',
  `vend_consignment_id` varchar(64) DEFAULT NULL COMMENT 'Legacy/alternate Vend consignment UUID',
  `consignment_id` bigint(20) unsigned DEFAULT NULL COMMENT 'Link to queue_consignments.id for Lightspeed sync',
  `transfer_category` enum('STOCK','JUICE','RETURN','PURCHASE_ORDER','INTERNAL','STOCKTAKE') NOT NULL DEFAULT 'STOCK',
  `creation_method` enum('MANUAL','AUTOMATED') NOT NULL DEFAULT 'MANUAL',
  `vend_number` varchar(64) DEFAULT NULL,
  `vend_url` varchar(255) DEFAULT NULL,
  `vend_origin` enum('CONSIGNMENT','PURCHASE_ORDER','TRANSFER') DEFAULT NULL,
  `outlet_from` varchar(100) NOT NULL COMMENT 'Source outlet UUID (Vend)',
  `outlet_to` varchar(100) NOT NULL COMMENT 'Destination outlet UUID (Vend)',
  `created_by` int(11) NOT NULL COMMENT 'CIS user who created this transfer',
  `staff_transfer_id` int(10) unsigned DEFAULT NULL COMMENT 'Link to existing staff_transfers.id (unsigned)',
  `supplier_id` varchar(100) DEFAULT NULL COMMENT 'Supplier UUID - for queries and portal filtering',
  `supplier_invoice_number` varchar(100) DEFAULT NULL,
  `supplier_reference` varchar(100) DEFAULT NULL,
  `tracking_number` varchar(100) DEFAULT NULL,
  `tracking_carrier` varchar(50) DEFAULT NULL,
  `tracking_url` varchar(255) DEFAULT NULL,
  `tracking_updated_at` timestamp NULL DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `expected_delivery_date` date DEFAULT NULL,
  `due_at` datetime DEFAULT NULL,
  `sent_at` datetime DEFAULT NULL,
  `received_at` datetime DEFAULT NULL,
  `supplier_sent_at` timestamp NULL DEFAULT NULL,
  `supplier_cancelled_at` timestamp NULL DEFAULT NULL,
  `supplier_acknowledged_at` timestamp NULL DEFAULT NULL COMMENT 'Timestamp when supplier first viewed the PO in portal',
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `last_transaction_id` varchar(50) DEFAULT NULL COMMENT 'Last transaction that modified this transfer',
  `version` int(11) DEFAULT 1 COMMENT 'Optimistic locking version',
  `locked_at` datetime DEFAULT NULL COMMENT 'When transfer was locked',
  `locked_by` int(11) DEFAULT NULL COMMENT 'User who locked transfer',
  `lock_expires_at` datetime DEFAULT NULL COMMENT 'When lock expires',
  `deleted_by` int(11) DEFAULT NULL COMMENT 'User ID of staff who soft-deleted this transfer',
  `deleted_at` timestamp NULL DEFAULT NULL COMMENT 'When the transfer was soft deleted',
  `customer_id` varchar(45) DEFAULT NULL,
  `state` enum('DRAFT','OPEN','PACKING','PACKAGED','SENT','RECEIVING','PARTIAL','RECEIVED','CLOSED','CANCELLED','ARCHIVED') NOT NULL DEFAULT 'OPEN',
  `total_boxes` int(10) unsigned NOT NULL DEFAULT 0,
  `total_weight_g` bigint(20) unsigned NOT NULL DEFAULT 0,
  `total_count` int(11) DEFAULT 0,
  `total_cost` decimal(10,2) DEFAULT 0.00,
  `total_received` int(11) DEFAULT 0,
  `line_item_count` int(11) DEFAULT 0,
  `draft_data` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`draft_data`)),
  `draft_updated_at` timestamp NULL DEFAULT NULL,
  `lightspeed_sync_status` enum('pending','synced','failed') DEFAULT 'pending',
  `lightspeed_last_sync_at` timestamp NULL DEFAULT NULL,
  `lightspeed_push_attempts` int(11) DEFAULT 0,
  `lightspeed_push_error` text DEFAULT NULL,
  `status` enum('DRAFT','OPEN','SENT','DISPATCHED','RECEIVED','CANCELLED','STOCKTAKE') DEFAULT 'OPEN',
  `type` enum('SUPPLIER','OUTLET','CUSTOMER','RETURN') DEFAULT 'OUTLET',
  `consignment_notes` text DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `uniq_transfers_public_id` (`public_id`),
  UNIQUE KEY `uniq_transfers_vend_uuid` (`vend_transfer_id`),
  KEY `idx_transfers_from_status_date` (`outlet_from`,`created_at`),
  KEY `idx_transfers_to_status_date` (`outlet_to`,`created_at`),
  KEY `idx_transfers_staff` (`staff_transfer_id`),
  KEY `idx_transfers_created` (`created_at`),
  KEY `idx_transfers_type_created` (`created_at`),
  KEY `idx_transfers_to_created` (`outlet_to`,`created_at`),
  KEY `idx_transfers_vend` (`vend_transfer_id`),
  KEY `idx_transfers_customer` (`customer_id`),
  KEY `idx_transfers_state` (`state`),
  KEY `idx_consignment_id` (`consignment_id`),
  KEY `idx_transfers_type_status_created` (`created_at`),
  KEY `idx_transfers_vend_number` (`vend_number`),
  KEY `idx_transfers_category` (`transfer_category`),
  KEY `idx_transfers_creation_method` (`creation_method`),
  KEY `idx_transfers_from_to_state` (`outlet_from`,`outlet_to`,`state`),
  KEY `idx_transfers_created_at` (`created_at`),
  KEY `idx_supplier_id` (`supplier_id`),
  KEY `idx_last_transaction` (`last_transaction_id`),
  KEY `idx_version` (`version`),
  KEY `idx_locked_at` (`locked_at`),
  KEY `idx_lock_expires` (`lock_expires_at`),
  KEY `idx_expected_delivery` (`expected_delivery_date`,`state`),
  KEY `idx_supplier_actions` (`supplier_sent_at`,`supplier_cancelled_at`),
  KEY `idx_supplier_acknowledged` (`supplier_acknowledged_at`),
  KEY `idx_consignments_public_id` (`public_id`),
  KEY `idx_consignments_outlet_to` (`outlet_to`),
  KEY `idx_consignments_state` (`state`),
  KEY `idx_consignments_created` (`created_at`),
  KEY `idx_consignments_state_outlet` (`state`,`outlet_to`,`created_at`),
  KEY `idx_tracking_number` (`tracking_number`),
  KEY `idx_tracking_updated_at` (`tracking_updated_at`),
  CONSTRAINT `fk_transfers_consignment` FOREIGN KEY (`consignment_id`) REFERENCES `queue_consignments` (`id`) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT `fk_transfers_customer` FOREIGN KEY (`customer_id`) REFERENCES `vend_customers` (`id`),
  CONSTRAINT `fk_transfers_staff` FOREIGN KEY (`staff_transfer_id`) REFERENCES `staff_transfers` (`id`) ON DELETE SET NULL ON UPDATE NO ACTION,
  CONSTRAINT `chk_transfers_outlets_diff` CHECK (`outlet_from` <> `outlet_to`)
) ENGINE=InnoDB AUTO_INCREMENT=28607 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Atomic outlet→outlet transfer. Single Vend consignment with strict lifecycle & Vend UUID.'
*************************** 1. row ***************************
       Table: vend_inventory
Create Table: CREATE TABLE `vend_inventory` (
  `id` varchar(100) NOT NULL COMMENT 'Unique identifier for each inventory record in the system.',
  `outlet_id` varchar(100) NOT NULL COMMENT 'Identifies the specific store location where the product inventory is held.',
  `product_id` varchar(100) NOT NULL COMMENT 'Unique identifier for each product in the inventory system.',
  `inventory_level` int(11) NOT NULL COMMENT 'The current stock quantity of a product available at a specific outlet.',
  `current_amount` int(11) NOT NULL COMMENT 'The actual stock quantity available for a product at a specific outlet.',
  `version` bigint(20) NOT NULL,
  `reorder_point` int(11) DEFAULT NULL COMMENT 'Minimum stock level triggering a reorder to prevent product shortages.',
  `reorder_amount` int(11) DEFAULT NULL COMMENT 'The quantity of a product to order when stock reaches the reorder point.',
  `deleted_at` timestamp NULL DEFAULT NULL COMMENT 'Timestamp indicating when the inventory record was marked as inactive or removed.',
  `average_cost` decimal(16,6) NOT NULL COMMENT 'The average cost of acquiring a product, used for pricing and profitability analysis.',
  PRIMARY KEY (`id`),
  KEY `product_id` (`product_id`),
  KEY `outlet_id` (`outlet_id`),
  KEY `ix_vend_inventory_outlet_product` (`outlet_id`,`product_id`),
  KEY `ix_vend_inventory_level` (`inventory_level`),
  KEY `ix_vi_outlet_amt_prod` (`outlet_id`,`deleted_at`,`current_amount`,`product_id`),
  KEY `idx_vend_inventory_covering` (`product_id`,`outlet_id`,`inventory_level`),
  KEY `idx_prod_outlet` (`product_id`,`outlet_id`),
  KEY `idx_inventory_product_outlet` (`product_id`,`outlet_id`),
  KEY `idx_inventory_stock_level` (`current_amount`,`reorder_point`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of inventory levels for products at various outlets, used by the business to manage stock levels and trigger reorders when necessary.  \nTags: inventory report, stock levels, reorder alerts, outlet inventory, product availability, stock management, reorder threshold, inventory audit, low stock warning, restock planning.'
*************************** 1. row ***************************
       Table: vend_outlets
Create Table: CREATE TABLE `vend_outlets` (
  `id` varchar(100) NOT NULL COMMENT 'Unique identifier for each retail outlet in the system.',
  `register_id` varchar(100) DEFAULT NULL COMMENT 'Unique identifier for the cash register used at a specific retail outlet.',
  `name` varchar(100) NOT NULL COMMENT 'The name of the physical store location for inventory and sales tracking.',
  `default_tax_id` varchar(100) DEFAULT NULL COMMENT 'Identifies the tax rate applied by default to sales at this outlet.',
  `currency` varchar(100) DEFAULT NULL COMMENT 'The currency used for transactions at this outlet.',
  `currency_symbol` varchar(100) DEFAULT NULL COMMENT 'Symbol used to represent the currency for transactions at this outlet.',
  `display_prices` varchar(100) DEFAULT NULL COMMENT 'Indicates whether prices shown to customers include tax.',
  `time_zone` varchar(100) DEFAULT NULL COMMENT 'Indicates the local time zone for scheduling and coordinating store operations.',
  `physical_street_number` varchar(45) DEFAULT NULL COMMENT 'Stores the street number for the physical location of the vendor outlet.',
  `physical_street` varchar(45) DEFAULT NULL COMMENT 'Street name for the outlet''s physical location.',
  `physical_address_1` varchar(100) DEFAULT NULL COMMENT 'Stores the first line of the outlet''s physical address for location identification.',
  `physical_address_2` varchar(100) DEFAULT NULL COMMENT 'Additional address details for a vendor outlet, such as a building or unit name.',
  `physical_suburb` varchar(100) DEFAULT NULL COMMENT 'Identifies the suburb where the physical store is located for delivery and regional analysis.',
  `physical_city` varchar(255) DEFAULT NULL,
  `physical_postcode` varchar(100) DEFAULT NULL COMMENT 'The postcode for the physical location of the retail outlet.',
  `physical_state` varchar(100) DEFAULT NULL COMMENT 'Indicates the region or province where the outlet is located for logistical and reporting purposes.',
  `physical_country_id` varchar(100) DEFAULT NULL COMMENT 'Stores the country code where the physical outlet is located for business operations.',
  `physical_phone_number` varchar(45) DEFAULT NULL COMMENT 'Contact number for reaching the physical store location.',
  `deleted_at` timestamp NULL DEFAULT NULL COMMENT 'Timestamp indicating when the outlet was marked as inactive or removed from active use.',
  `version` bigint(20) NOT NULL,
  `turn_over_rate` float NOT NULL DEFAULT 5 COMMENT 'The rate at which inventory is sold and replaced at this outlet.',
  `automatic_ordering` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if the outlet uses an automated system for placing stock orders.',
  `facebook_page_id` varchar(45) DEFAULT NULL COMMENT 'Unique identifier for the outlet''s Facebook page to manage social media presence and customer interactions.',
  `gss_token` varchar(100) DEFAULT NULL COMMENT 'Unique identifier for integrating Google services with the outlet.',
  `google_page_id` varchar(100) DEFAULT NULL COMMENT 'Unique identifier for the store''s Google business page, used for managing online presence and reviews.',
  `total_review_count` int(11) DEFAULT NULL COMMENT 'The total number of customer reviews received by this outlet.',
  `google_review_rating` float(2,1) DEFAULT NULL COMMENT 'Average customer rating for the outlet based on Google reviews.',
  `store_code` varchar(45) DEFAULT NULL COMMENT 'Unique identifier for each store location used in operations and reporting.',
  `magento_warehouse_id` int(11) DEFAULT NULL COMMENT 'Links each outlet to its corresponding warehouse in the Magento system.',
  `google_link` varchar(100) DEFAULT NULL COMMENT 'URL for the store''s Google Maps location to assist with navigation and customer visits.',
  `outlet_lat` varchar(45) DEFAULT NULL COMMENT 'Latitude coordinate for the outlet''s physical location.',
  `outlet_long` varchar(45) DEFAULT NULL COMMENT 'Geographical longitude coordinate for the outlet''s location.',
  `website_active` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if the outlet''s website is currently active for online sales.',
  `website_outlet_id` int(11) DEFAULT NULL COMMENT 'Unique identifier for the outlet''s online presence within the company''s website system.',
  `deposit_card_id` int(11) DEFAULT NULL COMMENT 'Identifies the card used for deposits at this outlet for financial tracking.',
  `vape_hq_shipping_id` varchar(45) DEFAULT NULL COMMENT 'Unique identifier for tracking shipments from Vape HQ to this outlet.',
  `banking_days_allocated` int(11) NOT NULL DEFAULT 7 COMMENT 'Number of days allocated for banking transactions at this outlet.',
  `email` varchar(45) DEFAULT NULL COMMENT 'Email address for contacting the specific store location.',
  `nz_post_api_key` varchar(45) DEFAULT NULL COMMENT 'API key for accessing New Zealand Post services for shipping and logistics.',
  `nz_post_subscription_key` varchar(45) DEFAULT NULL COMMENT 'Unique identifier for managing NZ Post subscription services for each outlet.',
  `ip_address` varchar(45) DEFAULT NULL COMMENT 'Identifies the network location of the outlet for security and connectivity purposes.',
  `deputy_location_id` int(11) NOT NULL DEFAULT 0 COMMENT 'Links the outlet to its corresponding location in the Deputy workforce management system.',
  `eftpos_merchant_id` int(11) DEFAULT NULL COMMENT 'Unique identifier for processing card payments at this outlet.',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `is_warehouse` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if the outlet functions as a warehouse (1 for yes, 0 for no).',
  PRIMARY KEY (`id`),
  UNIQUE KEY `register_id_UNIQUE` (`register_id`),
  UNIQUE KEY `magento_warehouse_id_UNIQUE` (`website_outlet_id`),
  KEY `ix_vend_outlets_warehouse` (`is_warehouse`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of all retail outlets for The Vape Shed, used to manage and track store-specific operations and sales data.  \nTags: outlet locations, store management, sales by outlet, tax settings, currency settings, price display settings, store timezone settings'
*************************** 1. row ***************************
       Table: vend_products
Create Table: CREATE TABLE `vend_products` (
  `id` varchar(100) NOT NULL DEFAULT '' COMMENT 'Unique identifier for each product entry in the system.',
  `source_id` varchar(200) DEFAULT NULL,
  `source_variant_id` mediumtext DEFAULT NULL COMMENT 'Unique identifier for a product variant from the original supplier or source.',
  `variant_parent_id` mediumtext DEFAULT NULL COMMENT 'Identifies the main product for which this item is a variant.',
  `name` varchar(255) DEFAULT NULL,
  `variant_name` varchar(255) DEFAULT NULL,
  `handle` varchar(200) DEFAULT NULL,
  `sku` varchar(200) DEFAULT NULL,
  `supplier_code` int(11) DEFAULT NULL COMMENT 'Unique identifier for the product''s supplier in the business system.',
  `active` int(11) NOT NULL DEFAULT 0,
  `has_inventory` int(11) NOT NULL DEFAULT 0,
  `is_composite` int(11) NOT NULL DEFAULT 0,
  `description` longtext DEFAULT NULL,
  `image_url` text DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Timestamp indicating when the product record was first added to the database.',
  `updated_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Timestamp of the last modification made to the product details.',
  `deleted_at` timestamp NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Timestamp indicating when the product was removed from active listings.',
  `type` mediumtext DEFAULT NULL,
  `account_code` mediumtext DEFAULT NULL,
  `version` bigint(20) NOT NULL DEFAULT 0,
  `supplier` mediumtext DEFAULT NULL COMMENT 'The supplier''s name for each product, used for ordering and inventory management.',
  `source` text DEFAULT NULL,
  `account_code_purchase` mediumtext DEFAULT NULL,
  `has_variants` mediumtext DEFAULT NULL COMMENT 'Indicates if the product has different versions or options available for sale.',
  `brand` varchar(255) DEFAULT NULL,
  `variant_options` text DEFAULT NULL,
  `brand_id` varchar(200) DEFAULT NULL COMMENT 'Unique identifier linking each product to its associated brand for inventory and reporting purposes.',
  `price_including_tax` decimal(13,5) NOT NULL DEFAULT 0.00000,
  `loyalty_amount` decimal(13,5) DEFAULT NULL COMMENT 'The loyalty amount awarded to customers for purchasing this product.',
  `price_excluding_tax` decimal(13,5) NOT NULL DEFAULT 0.00000,
  `product_type_id` mediumtext DEFAULT NULL,
  `supplier_id` varchar(200) DEFAULT NULL COMMENT 'Unique identifier for the supplier providing this product.',
  `button_order` int(11) NOT NULL DEFAULT 0,
  `is_active` int(11) NOT NULL DEFAULT 0,
  `image_thumbnail_url` text DEFAULT NULL,
  `supply_price` decimal(13,5) NOT NULL DEFAULT 0.00000,
  `avg_weight_grams` int(11) DEFAULT NULL,
  `dont_show_in_low_stock` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if a product should be excluded from low stock alerts.',
  `dont_insert_into_website` int(11) DEFAULT 0 COMMENT 'Indicates if a product should be excluded from being listed on the website.',
  `harp_product_status` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates the product''s availability status in the HARP system.',
  `is_deleted` tinyint(1) GENERATED ALWAYS AS (`deleted_at` <> '0000-00-00 00:00:00') STORED,
  PRIMARY KEY (`id`),
  KEY `idx_supplier_active` (`supplier_id`,`is_active`,`active`,`deleted_at`),
  KEY `ix_vend_products_brand_supplier` (`brand_id`,`supplier_id`),
  KEY `ix_vend_products_deleted` (`deleted_at`),
  KEY `ix_vend_products_active` (`active`),
  KEY `ix_vp_flags` (`is_deleted`,`is_active`,`active`,`has_inventory`),
  KEY `idx_vend_products_active_inventory` (`active`,`has_inventory`,`is_active`,`supplier_id`,`brand_id`),
  KEY `ix_vp_weight` (`avg_weight_grams`),
  FULLTEXT KEY `ProductFullSearch` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of all products available for sale through The Vape Shed''s point-of-sale system, used for inventory management and sales tracking.  \nTags: product catalog, inventory list, sales tracking, product availability, stock management, product search, SKU lookup, variant details, pricing information, product updates'
*************************** 1. row ***************************
       Table: vend_suppliers
Create Table: CREATE TABLE `vend_suppliers` (
  `id` varchar(100) NOT NULL COMMENT 'Unique identifier for each supplier in the system.',
  `name` varchar(100) NOT NULL COMMENT 'The supplier''s business or brand name for identification and communication.',
  `source` varchar(45) DEFAULT NULL COMMENT 'Indicates the origin or method by which the supplier was added to the system.',
  `description` varchar(500) DEFAULT NULL COMMENT 'Provides detailed overview of supplier product line or brand association',
  `deleted_at` varchar(45) DEFAULT NULL COMMENT 'Indicates when a supplier was removed from active use in the system.',
  `version` varchar(45) DEFAULT NULL,
  `email` varchar(100) DEFAULT NULL COMMENT 'Supplier''s primary email address for communication and order processing.',
  `claim_email` varchar(150) DEFAULT NULL,
  `bank_account` varchar(45) DEFAULT NULL COMMENT 'Stores the supplier''s bank account details for processing payments.',
  `phone` varchar(45) DEFAULT NULL COMMENT 'Stores the contact number for reaching out to the supplier.',
  `contact_name` varchar(45) DEFAULT NULL COMMENT 'Name of the primary contact person for supplier communication.',
  `show_in_system` int(11) DEFAULT 1 COMMENT 'Indicates if the supplier is visible and active in the system for transactions and operations.',
  `automatic_ordering` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if the supplier is set up for automatic order placement.',
  `automatic_transferring` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if supplier transfers are automated within the system.',
  `automatic_transferring_based_on_sales_data` int(11) DEFAULT 0 COMMENT 'Indicates if stock transfers are triggered automatically based on sales trends.',
  `notification_eligible` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if the supplier is eligible to receive notifications from the system.',
  `credit_sla_days` int(11) DEFAULT NULL,
  `enable_product_returns` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if the supplier allows products to be returned.',
  `enable_wholesale_show_estimated_delivery` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if wholesale customers can view estimated delivery dates for orders.',
  `automatic_ordering_moq` int(11) NOT NULL DEFAULT 30 COMMENT 'Minimum quantity required to trigger automatic ordering from this supplier.',
  `automatic_product_forecasting` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if the supplier''s products are included in automated demand forecasting.',
  `website` varchar(45) DEFAULT NULL,
  `contact_person` varchar(45) DEFAULT NULL,
  `brand_logo_url` varchar(45) DEFAULT NULL,
  `primary_color` varchar(45) DEFAULT NULL,
  `secondary_color` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `id_UNIQUE` (`id`),
  KEY `ix_vend_suppliers_auto` (`automatic_transferring`),
  KEY `ix_vs_name` (`name`),
  KEY `ix_vs_email` (`email`),
  KEY `ix_vs_visible_name` (`show_in_system`,`name`),
  KEY `ix_vs_notify_enabled` (`notification_eligible`,`id`),
  KEY `ix_vs_returns_enabled` (`enable_product_returns`,`id`),
  KEY `ix_vs_auto_ordering` (`automatic_ordering`,`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of suppliers from whom The Vape Shed sources products, used for managing supplier relationships and procurement processes.  \nTags: supplier list, active suppliers, supplier management, procurement, vendor contacts, supplier status, TVS range suppliers, supplier sourcing'
