CREATE TABLE `vend_suppliers` (
  `id` varchar(100) NOT NULL COMMENT 'Unique identifier for each supplier in the system.',
  `name` varchar(100) NOT NULL COMMENT 'The supplier''s business or brand name for identification and communication.',
  `source` varchar(45) DEFAULT NULL COMMENT 'Indicates the origin or method by which the supplier was added to the system.',
  `description` varchar(500) DEFAULT NULL COMMENT 'Provides detailed overview of supplier product line or brand association',
  `deleted_at` varchar(45) DEFAULT NULL COMMENT 'Indicates when a supplier was removed from active use in the system.',
  `version` varchar(45) DEFAULT NULL,
  `email` varchar(100) DEFAULT NULL COMMENT 'Supplier''s primary email address for communication and order processing.',
  `claim_email` varchar(150) DEFAULT NULL,
  `bank_account` varchar(45) DEFAULT NULL COMMENT 'Stores the supplier''s bank account details for processing payments.',
  `phone` varchar(45) DEFAULT NULL COMMENT 'Stores the contact number for reaching out to the supplier.',
  `contact_name` varchar(45) DEFAULT NULL COMMENT 'Name of the primary contact person for supplier communication.',
  `show_in_system` int(11) DEFAULT 1 COMMENT 'Indicates if the supplier is visible and active in the system for transactions and operations.',
  `automatic_ordering` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if the supplier is set up for automatic order placement.',
  `automatic_transferring` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if supplier transfers are automated within the system.',
  `automatic_transferring_based_on_sales_data` int(11) DEFAULT 0 COMMENT 'Indicates if stock transfers are triggered automatically based on sales trends.',
  `notification_eligible` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if the supplier is eligible to receive notifications from the system.',
  `credit_sla_days` int(11) DEFAULT NULL,
  `enable_product_returns` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if the supplier allows products to be returned.',
  `enable_wholesale_show_estimated_delivery` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if wholesale customers can view estimated delivery dates for orders.',
  `automatic_ordering_moq` int(11) NOT NULL DEFAULT 30 COMMENT 'Minimum quantity required to trigger automatic ordering from this supplier.',
  `automatic_product_forecasting` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if the supplier''s products are included in automated demand forecasting.',
  `website` varchar(45) DEFAULT NULL,
  `contact_person` varchar(45) DEFAULT NULL,
  `brand_logo_url` varchar(45) DEFAULT NULL,
  `primary_color` varchar(45) DEFAULT NULL,
  `secondary_color` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `id_UNIQUE` (`id`),
  KEY `ix_vend_suppliers_auto` (`automatic_transferring`),
  KEY `ix_vs_name` (`name`),
  KEY `ix_vs_email` (`email`),
  KEY `ix_vs_visible_name` (`show_in_system`,`name`),
  KEY `ix_vs_notify_enabled` (`notification_eligible`,`id`),
  KEY `ix_vs_returns_enabled` (`enable_product_returns`,`id`),
  KEY `ix_vs_auto_ordering` (`automatic_ordering`,`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of suppliers from whom The Vape Shed sources products, used for managing supplier relationships and procurement processes.  \nTags: supplier list, active suppliers, supplier management, procurement, vendor contacts, supplier status, TVS range suppliers, supplier sourcing';

CREATE TABLE `vend_sales_line_items` (
  `sales_increment_id` int(11) NOT NULL COMMENT 'Unique identifier for each sales transaction line item in sequential order.',
  `id` varchar(36) NOT NULL COMMENT 'Unique identifier for each sales line item in the system.',
  `product_id` varchar(36) NOT NULL COMMENT 'Unique identifier for the product sold in each transaction line.',
  `tax_id` varchar(36) NOT NULL COMMENT 'Identifies the specific tax rate applied to the sale item for accurate tax calculation.',
  `discount_total` decimal(16,6) DEFAULT NULL COMMENT 'Total discount amount applied to the sale line item.',
  `discount` decimal(16,6) DEFAULT NULL COMMENT 'The discount applied to a single item in a sales transaction.',
  `price_total` decimal(16,6) DEFAULT NULL COMMENT 'The final sale price of a product line item after discounts and taxes.',
  `price` decimal(16,6) DEFAULT NULL COMMENT 'The selling price of a single unit of the product before discounts and taxes.',
  `cost_total` decimal(16,6) NOT NULL COMMENT 'The total cost incurred by the business for the items in a sales transaction.',
  `cost` decimal(16,6) NOT NULL COMMENT 'The purchase price of a single unit of the product sold in a transaction.',
  `tax_total` decimal(16,6) DEFAULT NULL COMMENT 'The total tax amount applied to this sales line item.',
  `tax` decimal(16,6) DEFAULT NULL COMMENT 'The tax amount applied to a specific product line in a sales transaction.',
  `quantity` int(11) NOT NULL COMMENT 'The number of units of a product sold in a single transaction.',
  `loyalty_value` decimal(16,6) DEFAULT NULL COMMENT 'The loyalty points earned from this sale line item for customer rewards.',
  `note` mediumtext DEFAULT NULL COMMENT 'Additional details or comments about the sale item for staff reference.',
  `price_set` int(11) NOT NULL COMMENT 'Indicates if the item''s price was manually adjusted during the sale.',
  `status` varchar(30) NOT NULL COMMENT 'Indicates the current processing stage of the sales line item in the transaction.',
  `sequence` int(11) NOT NULL COMMENT 'Indicates the order of items within a single sale transaction.',
  `unit_discount` decimal(16,6) DEFAULT NULL COMMENT 'The discount applied to each individual item in a sale transaction.',
  `unit_loyalty_value` decimal(13,5) NOT NULL COMMENT 'The loyalty points earned per unit of product sold.',
  `total_cost` decimal(16,6) DEFAULT NULL COMMENT 'The total expense incurred by the business for the items in this sales line.',
  `unit_price` decimal(16,6) DEFAULT NULL COMMENT 'The selling price of a single unit of a product before any discounts or taxes.',
  `unit_cost` decimal(16,6) DEFAULT NULL COMMENT 'The cost per unit for each product sold, used to calculate profit margins.',
  `total_discount` decimal(16,6) DEFAULT NULL COMMENT 'The total monetary value of all discounts applied to a sales line item.',
  `total_price` decimal(16,6) DEFAULT NULL COMMENT 'The final amount charged to the customer for this line item, including any discounts and taxes.',
  `total_loyalty_value` decimal(16,6) DEFAULT NULL COMMENT 'The total loyalty points earned from this sale line item for customer rewards.',
  `total_tax` decimal(16,6) DEFAULT NULL COMMENT 'The total tax amount applied to this sales line item for reporting and accounting purposes.',
  `is_return` int(11) NOT NULL COMMENT 'Indicates if the item was returned by the customer (1 for yes, 0 for no).',
  `unit_tax` decimal(16,6) DEFAULT NULL COMMENT 'The tax amount applied to a single unit of the product in a sale.',
  `sale_id` varchar(36) NOT NULL COMMENT 'Unique identifier linking each line item to its corresponding sale transaction.',
  PRIMARY KEY (`sales_increment_id`,`id`),
  KEY `idx_quantity_return` (`quantity`,`is_return`),
  KEY `idx_status` (`status`),
  KEY `idx_sale_id` (`sale_id`),
  KEY `ix_vsli_salesinc_prod_status_return` (`sales_increment_id`,`product_id`,`status`,`is_return`),
  KEY `idx_vsli_status_product` (`status`,`product_id`),
  KEY `idx_vsli_covering_agg` (`status`,`product_id`,`quantity`,`price_total`,`tax_total`),
  KEY `idx_vsli_sales_inc_status` (`sales_increment_id`,`status`),
  KEY `idx_sale_line_product_outlet` (`product_id`,`sales_increment_id`,`is_return`),
  KEY `idx_covering_ultra_fast` (`product_id`,`is_return`,`sales_increment_id`,`quantity`),
  CONSTRAINT `vendSaleIncrementID` FOREIGN KEY (`sales_increment_id`) REFERENCES `vend_sales` (`increment_id`),
  CONSTRAINT `vendUUIDIncrementID` FOREIGN KEY (`sale_id`) REFERENCES `vend_sales` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains detailed records of individual items sold in each transaction, used for tracking sales performance and inventory management.  \nTags: sales report, transaction details, item sales analysis, inventory tracking, discount analysis, tax calculation, product performance';

CREATE TABLE `vend_sales` (
  `increment_id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Unique identifier for each sale transaction in the system.',
  `id` varchar(36) NOT NULL COMMENT 'Unique identifier for each sale transaction in the system.',
  `outlet_id` varchar(36) NOT NULL COMMENT 'Identifies the specific store location where the sale was made.',
  `register_id` varchar(36) NOT NULL COMMENT 'Identifies the specific cash register used for the sale transaction.',
  `user_id` varchar(36) NOT NULL COMMENT 'Identifies the staff member who processed the sale transaction.',
  `customer_id` varchar(36) NOT NULL COMMENT 'Unique identifier for the customer associated with each sale transaction.',
  `invoice_number` int(11) NOT NULL COMMENT 'Unique identifier for each sales transaction invoice.',
  `status` varchar(30) NOT NULL COMMENT 'Indicates the current progress or completion stage of a sale transaction.',
  `note` mediumtext NOT NULL COMMENT 'Additional details or comments related to a specific sale transaction.',
  `short_code` varchar(15) NOT NULL COMMENT 'Unique identifier for quick reference to specific sales transactions.',
  `return_for` varchar(100) DEFAULT NULL COMMENT 'Links a sale to its original transaction when processing a return.',
  `total_price` decimal(16,6) DEFAULT NULL COMMENT 'The total amount charged for a sale, including any discounts or returns.',
  `total_tax` decimal(16,6) DEFAULT NULL COMMENT 'The total tax amount applied to a sale transaction.',
  `total_loyalty` decimal(16,6) DEFAULT NULL COMMENT 'The total loyalty points earned by the customer from this sale.',
  `created_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Timestamp of when the sale record was initially created in the system.',
  `updated_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Timestamp of the last modification made to the sales record.',
  `sale_date` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'The date and time when the sale transaction was completed.',
  `deleted_at` timestamp NULL DEFAULT NULL COMMENT 'Timestamp indicating when the sale record was removed from active status.',
  `version` bigint(100) NOT NULL,
  `receipt_number` int(11) NOT NULL COMMENT 'Unique identifier for each sales transaction receipt issued to customers.',
  `version_max` bigint(100) DEFAULT NULL,
  `payments` longtext DEFAULT NULL,
  `sale_date_d` date GENERATED ALWAYS AS (cast(`sale_date` as date)) STORED,
  PRIMARY KEY (`increment_id`),
  UNIQUE KEY `SALE_ID_INDEX` (`id`),
  KEY `idx_user_id` (`user_id`),
  KEY `ix_vs_outlet_date_inc` (`outlet_id`,`sale_date`,`increment_id`),
  KEY `ix_vs_date_inc` (`sale_date`,`increment_id`),
  KEY `ix_vs_customer_date` (`customer_id`,`sale_date`),
  KEY `ix_vs_dateD_inc` (`sale_date_d`,`increment_id`),
  KEY `ix_vs_outlet_dateD_inc` (`outlet_id`,`sale_date_d`,`increment_id`),
  KEY `idx_vend_sales_performance` (`outlet_id`,`sale_date`,`status`,`total_price`),
  KEY `idx_vend_sales_user_date_status` (`user_id`,`created_at`,`status`),
  KEY `idx_vs_outlet_date_status` (`outlet_id`,`sale_date`,`status`),
  KEY `idx_vs_customer_date` (`customer_id`,`sale_date`),
  KEY `idx_vs_user_date_status` (`user_id`,`sale_date`,`status`),
  KEY `idx_vs_increment_outlet_date` (`increment_id`,`outlet_id`,`sale_date`),
  KEY `idx_sales_outlet_increment` (`outlet_id`,`increment_id`) USING BTREE,
  KEY `idx_vend_sales_web_processing` (`outlet_id`,`status`,`sale_date`,`created_at`)
) ENGINE=InnoDB AUTO_INCREMENT=1176292278 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of individual sales transactions processed through the Vend point-of-sale system, used by the business to track sales performance, manage inventory, and analyze customer purchasing behavior.  \nTags: sales reports, transaction history, closed sales, sales by outlet, sales by register, customer purchase analysis, daily sales summary, sales performance, inventory management, sales status closed, sales status open.';

CREATE TABLE `vend_outlets` (
  `id` varchar(100) NOT NULL COMMENT 'Unique identifier for each retail outlet in the system.',
  `register_id` varchar(100) DEFAULT NULL COMMENT 'Unique identifier for the cash register used at a specific retail outlet.',
  `name` varchar(100) NOT NULL COMMENT 'The name of the physical store location for inventory and sales tracking.',
  `default_tax_id` varchar(100) DEFAULT NULL COMMENT 'Identifies the tax rate applied by default to sales at this outlet.',
  `currency` varchar(100) DEFAULT NULL COMMENT 'The currency used for transactions at this outlet.',
  `currency_symbol` varchar(100) DEFAULT NULL COMMENT 'Symbol used to represent the currency for transactions at this outlet.',
  `display_prices` varchar(100) DEFAULT NULL COMMENT 'Indicates whether prices shown to customers include tax.',
  `time_zone` varchar(100) DEFAULT NULL COMMENT 'Indicates the local time zone for scheduling and coordinating store operations.',
  `physical_street_number` varchar(45) DEFAULT NULL COMMENT 'Stores the street number for the physical location of the vendor outlet.',
  `physical_street` varchar(45) DEFAULT NULL COMMENT 'Street name for the outlet''s physical location.',
  `physical_address_1` varchar(100) DEFAULT NULL COMMENT 'Stores the first line of the outlet''s physical address for location identification.',
  `physical_address_2` varchar(100) DEFAULT NULL COMMENT 'Additional address details for a vendor outlet, such as a building or unit name.',
  `physical_suburb` varchar(100) DEFAULT NULL COMMENT 'Identifies the suburb where the physical store is located for delivery and regional analysis.',
  `physical_city` varchar(255) DEFAULT NULL,
  `physical_postcode` varchar(100) DEFAULT NULL COMMENT 'The postcode for the physical location of the retail outlet.',
  `physical_state` varchar(100) DEFAULT NULL COMMENT 'Indicates the region or province where the outlet is located for logistical and reporting purposes.',
  `physical_country_id` varchar(100) DEFAULT NULL COMMENT 'Stores the country code where the physical outlet is located for business operations.',
  `physical_phone_number` varchar(45) DEFAULT NULL COMMENT 'Contact number for reaching the physical store location.',
  `deleted_at` timestamp NULL DEFAULT NULL COMMENT 'Timestamp indicating when the outlet was marked as inactive or removed from active use.',
  `version` bigint(20) NOT NULL,
  `turn_over_rate` float NOT NULL DEFAULT 5 COMMENT 'The rate at which inventory is sold and replaced at this outlet.',
  `automatic_ordering` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if the outlet uses an automated system for placing stock orders.',
  `facebook_page_id` varchar(45) DEFAULT NULL COMMENT 'Unique identifier for the outlet''s Facebook page to manage social media presence and customer interactions.',
  `gss_token` varchar(100) DEFAULT NULL COMMENT 'Unique identifier for integrating Google services with the outlet.',
  `google_page_id` varchar(100) DEFAULT NULL COMMENT 'Unique identifier for the store''s Google business page, used for managing online presence and reviews.',
  `total_review_count` int(11) DEFAULT NULL COMMENT 'The total number of customer reviews received by this outlet.',
  `google_review_rating` float(2,1) DEFAULT NULL COMMENT 'Average customer rating for the outlet based on Google reviews.',
  `store_code` varchar(45) DEFAULT NULL COMMENT 'Unique identifier for each store location used in operations and reporting.',
  `magento_warehouse_id` int(11) DEFAULT NULL COMMENT 'Links each outlet to its corresponding warehouse in the Magento system.',
  `google_link` varchar(100) DEFAULT NULL COMMENT 'URL for the store''s Google Maps location to assist with navigation and customer visits.',
  `outlet_lat` varchar(45) DEFAULT NULL COMMENT 'Latitude coordinate for the outlet''s physical location.',
  `outlet_long` varchar(45) DEFAULT NULL COMMENT 'Geographical longitude coordinate for the outlet''s location.',
  `website_active` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if the outlet''s website is currently active for online sales.',
  `website_outlet_id` int(11) DEFAULT NULL COMMENT 'Unique identifier for the outlet''s online presence within the company''s website system.',
  `deposit_card_id` int(11) DEFAULT NULL COMMENT 'Identifies the card used for deposits at this outlet for financial tracking.',
  `vape_hq_shipping_id` varchar(45) DEFAULT NULL COMMENT 'Unique identifier for tracking shipments from Vape HQ to this outlet.',
  `banking_days_allocated` int(11) NOT NULL DEFAULT 7 COMMENT 'Number of days allocated for banking transactions at this outlet.',
  `email` varchar(45) DEFAULT NULL COMMENT 'Email address for contacting the specific store location.',
  `nz_post_api_key` varchar(45) DEFAULT NULL COMMENT 'API key for accessing New Zealand Post services for shipping and logistics.',
  `nz_post_subscription_key` varchar(45) DEFAULT NULL COMMENT 'Unique identifier for managing NZ Post subscription services for each outlet.',
  `ip_address` varchar(45) DEFAULT NULL COMMENT 'Identifies the network location of the outlet for security and connectivity purposes.',
  `deputy_location_id` int(11) NOT NULL DEFAULT 0 COMMENT 'Links the outlet to its corresponding location in the Deputy workforce management system.',
  `eftpos_merchant_id` int(11) DEFAULT NULL COMMENT 'Unique identifier for processing card payments at this outlet.',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `is_warehouse` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if the outlet functions as a warehouse (1 for yes, 0 for no).',
  PRIMARY KEY (`id`),
  UNIQUE KEY `register_id_UNIQUE` (`register_id`),
  UNIQUE KEY `magento_warehouse_id_UNIQUE` (`website_outlet_id`),
  KEY `ix_vend_outlets_warehouse` (`is_warehouse`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of all retail outlets for The Vape Shed, used to manage and track store-specific operations and sales data.  \nTags: outlet locations, store management, sales by outlet, tax settings, currency settings, price display settings, store timezone settings';

CREATE TABLE `vend_inventory` (
  `id` varchar(100) NOT NULL COMMENT 'Unique identifier for each inventory record in the system.',
  `outlet_id` varchar(100) NOT NULL COMMENT 'Identifies the specific store location where the product inventory is held.',
  `product_id` varchar(100) NOT NULL COMMENT 'Unique identifier for each product in the inventory system.',
  `inventory_level` int(11) NOT NULL COMMENT 'The current stock quantity of a product available at a specific outlet.',
  `current_amount` int(11) NOT NULL COMMENT 'The actual stock quantity available for a product at a specific outlet.',
  `version` bigint(20) NOT NULL,
  `reorder_point` int(11) DEFAULT NULL COMMENT 'Minimum stock level triggering a reorder to prevent product shortages.',
  `reorder_amount` int(11) DEFAULT NULL COMMENT 'The quantity of a product to order when stock reaches the reorder point.',
  `deleted_at` timestamp NULL DEFAULT NULL COMMENT 'Timestamp indicating when the inventory record was marked as inactive or removed.',
  `average_cost` decimal(16,6) NOT NULL COMMENT 'The average cost of acquiring a product, used for pricing and profitability analysis.',
  PRIMARY KEY (`id`),
  KEY `product_id` (`product_id`),
  KEY `outlet_id` (`outlet_id`),
  KEY `ix_vend_inventory_outlet_product` (`outlet_id`,`product_id`),
  KEY `ix_vend_inventory_level` (`inventory_level`),
  KEY `ix_vi_outlet_amt_prod` (`outlet_id`,`deleted_at`,`current_amount`,`product_id`),
  KEY `idx_vend_inventory_covering` (`product_id`,`outlet_id`,`inventory_level`),
  KEY `idx_prod_outlet` (`product_id`,`outlet_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of inventory levels for products at various outlets, used by the business to manage stock levels and trigger reorders when necessary.  \nTags: inventory report, stock levels, reorder alerts, outlet inventory, product availability, stock management, reorder threshold, inventory audit, low stock warning, restock planning.';

CREATE TABLE `vend_brands` (
  `id` varchar(45) NOT NULL COMMENT 'Unique identifier for each vendor brand in the system.',
  `name` varchar(100) NOT NULL COMMENT 'The brand name of a vendor whose products are available for sale.',
  `deleted_at` varchar(45) DEFAULT NULL COMMENT 'Indicates when a brand was removed from active use in the system.',
  `version` varchar(45) NOT NULL,
  `enable_store_transfers` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if products from this brand can be transferred between stores.',
  PRIMARY KEY (`id`),
  KEY `ix_vend_brands_enable` (`enable_store_transfers`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of vape brands available for sale, used by the business to manage inventory and facilitate store transfers.  \nTags: Brand Management, Inventory Reports, Store Transfers, Active Brands, Brand Listings';

CREATE TABLE `transfers` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'CIS transfer ID (primary)',
  `public_id` varchar(40) NOT NULL,
  `vend_transfer_id` char(36) DEFAULT NULL COMMENT 'Vend/Lightspeed consignment UUID (unique when present)',
  `consignment_id` bigint(20) unsigned DEFAULT NULL COMMENT 'Link to queue_consignments.id for Lightspeed sync',
  `transfer_category` enum('STOCK','JUICE','STAFF','RETURN','PURCHASE_ORDER') NOT NULL DEFAULT 'STOCK',
  `creation_method` enum('MANUAL','AUTOMATED') NOT NULL DEFAULT 'MANUAL',
  `vend_number` varchar(64) DEFAULT NULL,
  `vend_url` varchar(255) DEFAULT NULL,
  `vend_origin` enum('CONSIGNMENT','PURCHASE_ORDER','TRANSFER') DEFAULT NULL,
  `outlet_from` varchar(100) NOT NULL COMMENT 'Source outlet UUID (Vend)',
  `outlet_to` varchar(100) NOT NULL COMMENT 'Destination outlet UUID (Vend)',
  `created_by` int(11) NOT NULL COMMENT 'CIS user who created this transfer',
  `staff_transfer_id` int(10) unsigned DEFAULT NULL COMMENT 'Link to existing staff_transfers.id (unsigned)',
  `supplier_id` varchar(100) DEFAULT NULL COMMENT 'Supplier UUID - for queries and portal filtering',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `last_transaction_id` varchar(50) DEFAULT NULL COMMENT 'Last transaction that modified this transfer',
  `version` int(11) DEFAULT 1 COMMENT 'Optimistic locking version',
  `locked_at` datetime DEFAULT NULL COMMENT 'When transfer was locked',
  `locked_by` int(11) DEFAULT NULL COMMENT 'User who locked transfer',
  `lock_expires_at` datetime DEFAULT NULL COMMENT 'When lock expires',
  `deleted_by` int(11) DEFAULT NULL COMMENT 'User ID of staff who soft-deleted this transfer',
  `deleted_at` timestamp NULL DEFAULT NULL COMMENT 'When the transfer was soft deleted',
  `customer_id` varchar(45) DEFAULT NULL,
  `state` enum('DRAFT','OPEN','PACKING','PACKAGED','SENT','RECEIVING','PARTIAL','RECEIVED','CLOSED','CANCELLED','ARCHIVED') NOT NULL DEFAULT 'OPEN',
  `total_boxes` int(10) unsigned NOT NULL DEFAULT 0,
  `total_weight_g` bigint(20) unsigned NOT NULL DEFAULT 0,
  `draft_data` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`draft_data`)),
  `draft_updated_at` timestamp NULL DEFAULT NULL,
  `vend_consignment_id` varchar(64) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `uniq_transfers_public_id` (`public_id`),
  UNIQUE KEY `uniq_transfers_vend_uuid` (`vend_transfer_id`),
  KEY `idx_transfers_from_status_date` (`outlet_from`,`created_at`),
  KEY `idx_transfers_to_status_date` (`outlet_to`,`created_at`),
  KEY `idx_transfers_staff` (`staff_transfer_id`),
  KEY `idx_transfers_created` (`created_at`),
  KEY `idx_transfers_type_created` (`created_at`),
  KEY `idx_transfers_to_created` (`outlet_to`,`created_at`),
  KEY `idx_transfers_vend` (`vend_transfer_id`),
  KEY `idx_transfers_customer` (`customer_id`),
  KEY `idx_transfers_state` (`state`),
  KEY `idx_consignment_id` (`consignment_id`),
  KEY `idx_transfers_type_status_created` (`created_at`),
  KEY `idx_transfers_vend_number` (`vend_number`),
  KEY `idx_transfers_category` (`transfer_category`),
  KEY `idx_transfers_creation_method` (`creation_method`),
  KEY `idx_transfers_from_to_state` (`outlet_from`,`outlet_to`,`state`),
  KEY `idx_transfers_created_at` (`created_at`),
  KEY `idx_supplier_id` (`supplier_id`),
  KEY `idx_last_transaction` (`last_transaction_id`),
  KEY `idx_version` (`version`),
  KEY `idx_locked_at` (`locked_at`),
  KEY `idx_lock_expires` (`lock_expires_at`),
  CONSTRAINT `fk_transfers_consignment` FOREIGN KEY (`consignment_id`) REFERENCES `queue_consignments` (`id`) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT `fk_transfers_customer` FOREIGN KEY (`customer_id`) REFERENCES `vend_customers` (`id`),
  CONSTRAINT `fk_transfers_staff` FOREIGN KEY (`staff_transfer_id`) REFERENCES `staff_transfers` (`id`) ON DELETE SET NULL ON UPDATE NO ACTION,
  CONSTRAINT `chk_transfers_outlets_diff` CHECK (`outlet_from` <> `outlet_to`)
) ENGINE=InnoDB AUTO_INCREMENT=28191 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Atomic outlet→outlet transfer. Single Vend consignment with strict lifecycle & Vend UUID.';

CREATE TABLE `transfer_items` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Transfer line ID',
  `transfer_id` int(11) NOT NULL COMMENT 'FK to transfers.id',
  `product_id` varchar(45) NOT NULL COMMENT 'Vend product UUID',
  `qty_requested` int(11) NOT NULL COMMENT 'Requested quantity',
  `qty_sent_total` int(11) DEFAULT 0 COMMENT 'Cumulative sent qty (across shipments)',
  `qty_received_total` int(11) DEFAULT 0 COMMENT 'Cumulative received qty (across shipments)',
  `confirmation_status` enum('pending','accepted','declined') NOT NULL DEFAULT 'pending' COMMENT 'Staff multi-store confirmation',
  `confirmed_by_store` int(11) DEFAULT NULL COMMENT 'UserID from supplying store who confirmed',
  `created_at` datetime DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp() COMMENT 'Last time this transfer item was updated',
  `deleted_by` int(11) DEFAULT NULL COMMENT 'User ID of staff who soft-deleted this transfer item',
  `deleted_at` timestamp NULL DEFAULT NULL COMMENT 'When the transfer item was soft deleted',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uniq_item_transfer_product` (`transfer_id`,`product_id`),
  UNIQUE KEY `uniq_transfer_product` (`transfer_id`,`product_id`),
  KEY `idx_item_transfer` (`transfer_id`),
  KEY `idx_item_product` (`product_id`),
  KEY `idx_item_confirm` (`confirmation_status`),
  KEY `idx_items_outstanding` (`transfer_id`,`confirmation_status`),
  KEY `idx_ti_transfer_product` (`transfer_id`,`product_id`),
  KEY `idx_items_transfer_status` (`transfer_id`,`confirmation_status`),
  CONSTRAINT `fk_items_transfer` FOREIGN KEY (`transfer_id`) REFERENCES `transfers` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `chk_item_qtys_nonneg` CHECK (`qty_requested` >= 0 and `qty_sent_total` >= 0 and `qty_received_total` >= 0),
  CONSTRAINT `chk_item_qtys_bounds` CHECK (`qty_sent_total` <= `qty_requested` and `qty_received_total` <= `qty_sent_total`)
) ENGINE=InnoDB AUTO_INCREMENT=286865 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Product lines for a transfer; tracks requested/sent/received and store confirmations.';

CREATE TABLE `faulty_products` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Unique identifier for each faulty product record in the system.',
  `product_id` varchar(45) NOT NULL COMMENT 'Unique identifier for the faulty product being reported.',
  `serial_number` varchar(100) DEFAULT NULL COMMENT 'Unique identifier for tracking each faulty product in the system.',
  `fault_desc` mediumtext NOT NULL COMMENT 'Description of the product''s fault as reported by staff for troubleshooting and record-keeping.',
  `staff_member` varchar(45) NOT NULL COMMENT 'Name of the employee who logged or handled the faulty product entry.',
  `store_location` varchar(100) NOT NULL COMMENT 'Identifies the specific store where the faulty product is located for processing or reporting.',
  `time_created` timestamp NOT NULL DEFAULT current_timestamp(),
  `status` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates whether the faulty product has been processed for resolution.',
  `supplier_status` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates the current resolution status of the product issue with the supplier.',
  `supplier_update_status` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if the supplier has been updated about the faulty product''s status.',
  `supplier_status_timestamp` timestamp NULL DEFAULT NULL COMMENT 'Timestamp of the last update from the supplier regarding the faulty product''s status.',
  `wholesale_customer_submitted_id` int(11) NOT NULL DEFAULT 0 COMMENT 'Identifies the wholesale customer who reported the faulty product.',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3533 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of products identified as faulty, used by the business to track and manage defective items for quality control and customer service purposes.  \nTags: faulty product reports, defect tracking, quality control, customer complaints, product returns, warranty claims, store location issues, staff handling, product recalls.';

CREATE TABLE `faulty_product_media_uploads` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Unique identifier for each media upload related to a faulty product report.',
  `fileName` varchar(255) NOT NULL COMMENT 'Name of the media file documenting a product fault for reference and review.',
  `upload_time` timestamp NOT NULL DEFAULT current_timestamp(),
  `fault_id` int(11) NOT NULL COMMENT 'Links each media upload to a specific product fault for tracking and resolution.',
  `tempFileName` varchar(255) NOT NULL COMMENT 'Temporary name assigned to a media file during the upload process for tracking purposes.',
  PRIMARY KEY (`id`),
  KEY `faultID_idx` (`fault_id`),
  CONSTRAINT `faultID` FOREIGN KEY (`fault_id`) REFERENCES `faulty_products` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=6092 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table stores media files uploaded as evidence of faulty products, used by staff to review and process product fault claims.  \nTags: product fault evidence, media uploads, fault claim review, faulty product documentation, product issue verification, warranty claims, customer service support';
